/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Database.DBMS;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Madushanka
 */
public class stock extends javax.swing.JFrame {

    /**
     * Creates new form stock
     */
    public stock() {
        initComponents();
        loadCate();
        loadTable();
        jTextField1.grabFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton7 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel30 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(200, 200, 242));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Stock", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 20), new java.awt.Color(0, 0, 204))); // NOI18N

        jPanel2.setBackground(new java.awt.Color(200, 200, 242));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Add product details", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 15), new java.awt.Color(0, 51, 153)))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel3.setText("ID");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel4.setText("0");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel5.setText("Category");

        jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jComboBox1.setToolTipText("");

        jButton7.setBackground(new java.awt.Color(0, 0, 153));
        jButton7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("Add Category");
        jButton7.setContentAreaFilled(false);
        jButton7.setOpaque(true);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel6.setText("Name");

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel8.setText("Selling price");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel9.setText("Weight");

        jTextField3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jTextField4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel11.setText("g");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel12.setText("Unit in Box");

        jTextField5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 202, Short.MAX_VALUE)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton7))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(74, 74, 74)
                        .addComponent(jTextField1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(jLabel3)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGap(162, 162, 162))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                            .addComponent(jLabel9)
                                            .addGap(217, 217, 217)))
                                    .addComponent(jLabel12))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(23, 23, 23))
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(23, 23, 23))
                                        .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)))))
                        .addGap(6, 6, 6)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(3, 3, 3)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        jPanel3.setBackground(new java.awt.Color(200, 200, 242));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Product Search", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 15), new java.awt.Color(0, 51, 153))); // NOI18N

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel13.setText("Price");

        jTextField6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel14.setText("Name");

        jTextField7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel15.setText("Weight");

        jTextField8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel16.setText("g");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField6)
                    .addComponent(jTextField7)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel13)
                            .addComponent(jLabel15))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addComponent(jLabel16)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel14)
                .addGap(1, 1, 1)
                .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addContainerGap())
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Category", "Name", "Weight", "Sell Price", "Box In Qty", "BOX", "Unbox Qty", "Qty", "Value"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(5).setResizable(false);
            jTable1.getColumnModel().getColumn(6).setResizable(false);
            jTable1.getColumnModel().getColumn(7).setResizable(false);
            jTable1.getColumnModel().getColumn(8).setResizable(false);
            jTable1.getColumnModel().getColumn(9).setResizable(false);
        }

        jButton1.setBackground(new java.awt.Color(0, 204, 0));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setText("Save");
        jButton1.setContentAreaFilled(false);
        jButton1.setOpaque(true);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(204, 204, 0));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton2.setText("Update");
        jButton2.setContentAreaFilled(false);
        jButton2.setOpaque(true);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(153, 255, 153));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton3.setText("Search");
        jButton3.setContentAreaFilled(false);
        jButton3.setOpaque(true);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/refresh.png"))); // NOI18N
        jButton9.setContentAreaFilled(false);
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jCheckBox1.setBackground(new java.awt.Color(200, 200, 242));
        jCheckBox1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jCheckBox1.setText("With Loading Stock");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel30.setText("Amount         :");

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel24.setText("0.00");

        jButton4.setBackground(new java.awt.Color(102, 0, 102));
        jButton4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Print Stock");
        jButton4.setContentAreaFilled(false);
        jButton4.setOpaque(true);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(255, 153, 102));
        jButton5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton5.setText("Delete");
        jButton5.setContentAreaFilled(false);
        jButton5.setOpaque(true);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jButton5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel30)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jCheckBox1))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(jButton4)
                    .addComponent(jLabel30))
                .addGap(7, 7, 7))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        add_cate ac = new add_cate();
        ac.setVisible(true);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code her
        loadCate();
        loadTable();
        jTextField6.setText("");
        jTextField7.setText("");
        jTextField8.setText("");
        jTextField1.setText("");
        jTextField3.setText("");
        jTextField4.setText("");
        jTextField5.setText("");
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //insert
        try{
        String cate_name = jComboBox1.getSelectedItem().toString();
        String cate_id ="";
        ResultSet rs1 = DBMS.search("SELECT * FROM category WHERE `name`='"+cate_name+"'");
        if(rs1.next()){
            cate_id = rs1.getString("id");
        }
        String name = jTextField1.getText();
        String sp = jTextField3.getText();
        String wei = jTextField4.getText();
        String wei_lb = jLabel11.getText();
        String weight = wei.concat(wei_lb);
        String qty_i_b = jTextField5.getText();
        if(!name.isEmpty() && !sp.isEmpty() &&!wei.isEmpty() && !qty_i_b.isEmpty()){
        ResultSet rs2 = DBMS.search("SELECT * FROM stock WHERE `name`='"+name+"' AND `weight`='"+weight+"' ");
        if(rs2.next()==false){
            String qty = "0";
            DBMS.iud("INSERT INTO stock(`cate_id`,`name`,`sell_p`,`weight`,`qty_i_b`,`qty`) VALUE('"+cate_id+"','"+name+"','"+sp+"','"+weight+"','"+qty_i_b+"','"+qty+"')");
            jTextField1.setText("");
            jTextField3.setText("");
            jTextField4.setText("");
            jTextField5.setText("");
            JOptionPane.showMessageDialog(this, "Success", "Add Product", JOptionPane.INFORMATION_MESSAGE);
            loadTable();
        }else{
        JOptionPane.showMessageDialog(this, "This item allredy add", "Add Product", JOptionPane.INFORMATION_MESSAGE);
        }
        }else{
            JOptionPane.showMessageDialog(this, "Please Enter All Details", "Add Product", JOptionPane.INFORMATION_MESSAGE);
        }
        }catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        //update
        if(evt.getClickCount()==2){
            int row = jTable1.getSelectedRow();
            jLabel4.setText(jTable1.getValueAt(row, 0).toString());
            jComboBox1.setSelectedItem(jTable1.getValueAt(row, 1).toString());
            jTextField1.setText(jTable1.getValueAt(row, 2).toString());
            String wei = jTable1.getValueAt(row, 3).toString();
            String w = wei.replaceAll("[^0-9]", "");
            jTextField4.setText(w);
            jTextField3.setText(jTable1.getValueAt(row, 4).toString());
            jTextField5.setText(jTable1.getValueAt(row, 5).toString());
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try {
            String p_id = jLabel4.getText();
       if(!p_id.equals("0")){
           String cate_name = jComboBox1.getSelectedItem().toString();
        String cate_id ="";
        ResultSet rs1 = DBMS.search("SELECT * FROM category WHERE `name`='"+cate_name+"'");
        if(rs1.next()){
          cate_id = rs1.getString("id");
        }
        String name = jTextField1.getText();
        String sp = jTextField3.getText();
        String wei = jTextField4.getText();
        String wei_lb = jLabel11.getText();
        String weight = wei.concat(wei_lb);
        String qty_i_b = jTextField5.getText();
           DBMS.iud("UPDATE stock SET `cate_id`='"+cate_id+"',`name`='"+name+"',`sell_p`='"+sp+"',`weight`='"+weight+"',`qty_i_b`='"+qty_i_b+"' WHERE `id`='"+p_id+"'");
           loadTable();
           jLabel4.setText("");
           jTextField1.setText("");
           jTextField3.setText("");
           jTextField4.setText("");
           jTextField5.setText("");
           jComboBox1.setSelectedIndex(0);
       }else{
       JOptionPane.showMessageDialog(this, "Please Select Product", "Update Product", JOptionPane.INFORMATION_MESSAGE);
       }
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        //search
        try {
            String n = jTextField7.getText();
            String p = jTextField6.getText();
            String w = jTextField8.getText();
            String w_l = jLabel16.getText();
            String weight = w.concat(w_l);
        if(!n.isEmpty() && !p.isEmpty() && !w.isEmpty()){
            DecimalFormat df = new DecimalFormat("#.00");
           ResultSet rs = DBMS.search("SELECT * FROM stock WHERE `name` LIKE '"+n+"%' AND `sell_p`='"+p+"' AND `weight`='"+weight+"' ORDER BY CAST(id AS unsigned) ASC");
          TableModel tm = jTable1.getModel(); 
          DefaultTableModel dtm = (DefaultTableModel) tm;
          dtm.setRowCount(0);
          
          jLabel24.setText("0.00");
          Double total = 0.00;
          
          while (rs.next()) {              
              Vector<String> v = new Vector<>();
              v.add(rs.getString("id"));
              
              
              ResultSet rs2 = DBMS.search("SELECT `name` FROM category WHERE `id`='"+rs.getString("cate_id")+"'");
              if(rs2.next()){
                  v.add(rs2.getString("name"));
              }
              v.add(rs.getString("name"));
              v.add(rs.getString("weight"));
              v.add(rs.getString("sell_p"));
              v.add(rs.getString("qty_i_b"));
              String qt = rs.getString("qty");
              String q_i_b = rs.getString("qty_i_b");
              Double x1 = Double.valueOf(qt);
              Double y1 = Double.valueOf(q_i_b);
              Double xy = x1/y1;
              int xy1 = xy.intValue();
              v.add(String.valueOf(xy1));
              Double xy2 = Double.valueOf(xy1);
              Double xy3 = xy2*y1;
              Double xy4 = x1-xy3;
              int xy5 = xy4.intValue();
              v.add(String.valueOf(xy5));
              v.add(String.valueOf(qt));
          
          String sp = rs.getString("sell_p");
          Double d_sp = Double.valueOf(sp);
           total += d_sp*x1;
           v.add(df.format(d_sp*x1));
           dtm.addRow(v);
          }
          
          String t = df.format(total);
          jLabel24.setText(String.valueOf(t));
        }else if(!n.isEmpty() && p.isEmpty() && !w.isEmpty()){
            DecimalFormat df = new DecimalFormat("#.00");
        ResultSet rs = DBMS.search("SELECT * FROM stock WHERE `name` LIKE '"+n+"%' AND `weight`='"+weight+"' ORDER BY CAST(id AS unsigned) ASC");
          TableModel tm = jTable1.getModel(); 
          DefaultTableModel dtm = (DefaultTableModel) tm;
          dtm.setRowCount(0);
          
          jLabel24.setText("0.00");
          Double total = 0.00;
          
          while (rs.next()) {              
              Vector<String> v = new Vector<>();
              v.add(rs.getString("id"));
              
              
              ResultSet rs2 = DBMS.search("SELECT `name` FROM category WHERE `id`='"+rs.getString("cate_id")+"'");
              if(rs2.next()){
                  v.add(rs2.getString("name"));
              }
              v.add(rs.getString("name"));
              v.add(rs.getString("weight"));
              v.add(rs.getString("sell_p"));
              v.add(rs.getString("qty_i_b"));
              String qt = rs.getString("qty");
              String q_i_b = rs.getString("qty_i_b");
              Double x1 = Double.valueOf(qt);
              Double y1 = Double.valueOf(q_i_b);
              Double xy = x1/y1;
              int xy1 = xy.intValue();
              v.add(String.valueOf(xy1));
              Double xy2 = Double.valueOf(xy1);
              Double xy3 = xy2*y1;
              Double xy4 = x1-xy3;
              int xy5 = xy4.intValue();
              v.add(String.valueOf(xy5));
              v.add(String.valueOf(qt));
               String sp = rs.getString("sell_p");
          Double d_sp = Double.valueOf(sp);
           total += d_sp*x1;
           v.add(df.format(d_sp*x1));
           dtm.addRow(v);
          } 
           
          String t = df.format(total);
          jLabel24.setText(String.valueOf(t));
        }else if(n.isEmpty() && !p.isEmpty() && !w.isEmpty()){
            DecimalFormat df = new DecimalFormat("#.00");
        ResultSet rs = DBMS.search("SELECT * FROM stock WHERE `sell_p`='"+p+"'  AND `weight`='"+weight+"' ORDER BY CAST(id AS unsigned) ASC");
          TableModel tm = jTable1.getModel(); 
          DefaultTableModel dtm = (DefaultTableModel) tm;
          dtm.setRowCount(0);
          
          jLabel24.setText("0.00");
          Double total = 0.00;
          
          while (rs.next()) {              
              Vector<String> v = new Vector<>();
              v.add(rs.getString("id"));
              
              
              ResultSet rs2 = DBMS.search("SELECT `name` FROM category WHERE `id`='"+rs.getString("cate_id")+"'");
              if(rs2.next()){
                  v.add(rs2.getString("name"));
              }
              v.add(rs.getString("name"));
              v.add(rs.getString("weight"));
              v.add(rs.getString("sell_p"));
              v.add(rs.getString("qty_i_b"));
              String qt = rs.getString("qty");
              String q_i_b = rs.getString("qty_i_b");
              Double x1 = Double.valueOf(qt);
              Double y1 = Double.valueOf(q_i_b);
              Double xy = x1/y1;
              int xy1 = xy.intValue();
              v.add(String.valueOf(xy1));
              Double xy2 = Double.valueOf(xy1);
              Double xy3 = xy2*y1;
              Double xy4 = x1-xy3;
              int xy5 = xy4.intValue();
              v.add(String.valueOf(xy5));
              v.add(String.valueOf(qt));
              String sp = rs.getString("sell_p");
          Double d_sp = Double.valueOf(sp);
           total += d_sp*x1;
           v.add(df.format(d_sp*x1));
           dtm.addRow(v);
          } 
           
          String t = df.format(total);
          jLabel24.setText(String.valueOf(t));
        }else if(!n.isEmpty() && !p.isEmpty() && w.isEmpty()){
            DecimalFormat df = new DecimalFormat("#.00");
        ResultSet rs = DBMS.search("SELECT * FROM stock WHERE `name` LIKE '"+n+"%' AND `sell_p`='"+p+"' ORDER BY CAST(id AS unsigned) ASC");
          TableModel tm = jTable1.getModel(); 
          DefaultTableModel dtm = (DefaultTableModel) tm;
          dtm.setRowCount(0);
          
          jLabel24.setText("0.00");
          Double total = 0.00;
          
          while (rs.next()) {              
              Vector<String> v = new Vector<>();
              v.add(rs.getString("id"));
              
              
              ResultSet rs2 = DBMS.search("SELECT `name` FROM category WHERE `id`='"+rs.getString("cate_id")+"'");
              if(rs2.next()){
                  v.add(rs2.getString("name"));
              }
              v.add(rs.getString("name"));
              v.add(rs.getString("weight"));
              v.add(rs.getString("sell_p"));
              v.add(rs.getString("qty_i_b"));
              String qt = rs.getString("qty");
              String q_i_b = rs.getString("qty_i_b");
              Double x1 = Double.valueOf(qt);
              Double y1 = Double.valueOf(q_i_b);
              Double xy = x1/y1;
              int xy1 = xy.intValue();
              v.add(String.valueOf(xy1));
              Double xy2 = Double.valueOf(xy1);
              Double xy3 = xy2*y1;
              Double xy4 = x1-xy3;
              int xy5 = xy4.intValue();
              v.add(String.valueOf(xy5));
              v.add(String.valueOf(qt));
              String sp = rs.getString("sell_p");
          Double d_sp = Double.valueOf(sp);
           total += d_sp*x1;
           v.add(df.format(d_sp*x1));
           dtm.addRow(v);
          } 
          
          String t = df.format(total);
          jLabel24.setText(String.valueOf(t));
        }else if(n.isEmpty() && p.isEmpty() && !w.isEmpty()){
            DecimalFormat df = new DecimalFormat("#.00");
        ResultSet rs = DBMS.search("SELECT * FROM stock WHERE `weight`='"+weight+"' ORDER BY CAST(id AS unsigned) ASC");
          TableModel tm = jTable1.getModel(); 
          DefaultTableModel dtm = (DefaultTableModel) tm;
          dtm.setRowCount(0);
          
          jLabel24.setText("0.00");
          Double total = 0.00;
          
          while (rs.next()) {              
              Vector<String> v = new Vector<>();
              v.add(rs.getString("id"));
              
              
              ResultSet rs2 = DBMS.search("SELECT `name` FROM category WHERE `id`='"+rs.getString("cate_id")+"'");
              if(rs2.next()){
                  v.add(rs2.getString("name"));
              }
              v.add(rs.getString("name"));
              v.add(rs.getString("weight"));
              v.add(rs.getString("sell_p"));
              v.add(rs.getString("qty_i_b"));
              String qt = rs.getString("qty");
              String q_i_b = rs.getString("qty_i_b");
              Double x1 = Double.valueOf(qt);
              Double y1 = Double.valueOf(q_i_b);
              Double xy = x1/y1;
              int xy1 = xy.intValue();
              v.add(String.valueOf(xy1));
              Double xy2 = Double.valueOf(xy1);
              Double xy3 = xy2*y1;
              Double xy4 = x1-xy3;
              int xy5 = xy4.intValue();
              v.add(String.valueOf(xy5));
              v.add(String.valueOf(qt));
               String sp = rs.getString("sell_p");
          Double d_sp = Double.valueOf(sp);
           total += d_sp*x1;
           v.add(df.format(d_sp*x1));
           dtm.addRow(v);
          } 
           
          String t = df.format(total);
          jLabel24.setText(String.valueOf(t));
        }else if(n.isEmpty() && !p.isEmpty() && w.isEmpty()){
             DecimalFormat df = new DecimalFormat("#.00");
         ResultSet rs = DBMS.search("SELECT * FROM stock WHERE `sell_p`='"+p+"' ORDER BY CAST(id AS unsigned) ASC");
          TableModel tm = jTable1.getModel(); 
          DefaultTableModel dtm = (DefaultTableModel) tm;
          dtm.setRowCount(0);
          
          jLabel24.setText("0.00");
          Double total = 0.00;
          
          while (rs.next()) {              
              Vector<String> v = new Vector<>();
              v.add(rs.getString("id"));
              
              
              ResultSet rs2 = DBMS.search("SELECT `name` FROM category WHERE `id`='"+rs.getString("cate_id")+"'");
              if(rs2.next()){
                  v.add(rs2.getString("name"));
              }
              v.add(rs.getString("name"));
              v.add(rs.getString("weight"));
              v.add(rs.getString("sell_p"));
              v.add(rs.getString("qty_i_b"));
              String qt = rs.getString("qty");
              String q_i_b = rs.getString("qty_i_b");
              Double x1 = Double.valueOf(qt);
              Double y1 = Double.valueOf(q_i_b);
              Double xy = x1/y1;
              int xy1 = xy.intValue();
              v.add(String.valueOf(xy1));
              Double xy2 = Double.valueOf(xy1);
              Double xy3 = xy2*y1;
              Double xy4 = x1-xy3;
              int xy5 = xy4.intValue();
              v.add(String.valueOf(xy5));
              v.add(String.valueOf(qt));
              String sp = rs.getString("sell_p");
          Double d_sp = Double.valueOf(sp);
           total += d_sp*x1;
           v.add(df.format(d_sp*x1));
           dtm.addRow(v);
          } 
          
          String t = df.format(total);
          jLabel24.setText(String.valueOf(t));
        }else if(!n.isEmpty() && p.isEmpty() && w.isEmpty()){
            DecimalFormat df = new DecimalFormat("#.00");
        ResultSet rs = DBMS.search("SELECT * FROM stock WHERE `name` LIKE '"+n+"%' ORDER BY CAST(id AS unsigned) ASC");
          TableModel tm = jTable1.getModel(); 
          DefaultTableModel dtm = (DefaultTableModel) tm;
          dtm.setRowCount(0);
          
          jLabel24.setText("0.00");
          Double total = 0.00;
          
          while (rs.next()) {              
              Vector<String> v = new Vector<>();
              v.add(rs.getString("id"));
              
              
              ResultSet rs2 = DBMS.search("SELECT `name` FROM category WHERE `id`='"+rs.getString("cate_id")+"'");
              if(rs2.next()){
                  v.add(rs2.getString("name"));
              }
              v.add(rs.getString("name"));
              v.add(rs.getString("weight"));
              v.add(rs.getString("sell_p"));
              v.add(rs.getString("qty_i_b"));
              String qt = rs.getString("qty");
              String q_i_b = rs.getString("qty_i_b");
              Double x1 = Double.valueOf(qt);
              Double y1 = Double.valueOf(q_i_b);
              Double xy = x1/y1;
              int xy1 = xy.intValue();
              v.add(String.valueOf(xy1));
              Double xy2 = Double.valueOf(xy1);
              Double xy3 = xy2*y1;
              Double xy4 = x1-xy3;
              int xy5 = xy4.intValue();
              v.add(String.valueOf(xy5));
              v.add(String.valueOf(qt));
              String sp = rs.getString("sell_p");
          Double d_sp = Double.valueOf(sp);
           total += d_sp*x1;
           v.add(df.format(d_sp*x1));
           dtm.addRow(v);
          } 
          
          String t = df.format(total);
          jLabel24.setText(String.valueOf(t));
        }
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        Boolean b = jCheckBox1.isSelected();
        if(b==true){
            loadTableWL();
        }else{
            loadTable();
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
      TableModel tb = jTable1.getModel();
      String l = jLabel24.getText();
      stock_report st = new stock_report(tb,l);
      //st.setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        // TODO add your handling code here:
         String text = jTextField1.getText();
       if(text.length()!=50){
        if((Character.isDigit(evt.getKeyChar()))){
                evt.consume();
            }
       }else{
           evt.consume();
       }
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        int row = jTable1.getSelectedRow();
        if(row!= -1){
            String id = jTable1.getValueAt(row, 0).toString();
            DBMS.iud("DELETE FROM stock WHERE `id`='"+id+"'");
            JOptionPane.showMessageDialog(this, "Delete Selected Product", "Success", JOptionPane.INFORMATION_MESSAGE);
            loadTable();
        }else{
                JOptionPane.showMessageDialog(this, "Please Select Product", "Delete Product", JOptionPane.INFORMATION_MESSAGE);

        }
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(stock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(stock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(stock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(stock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new stock().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    // End of variables declaration//GEN-END:variables
public void loadCate(){
    try{
ResultSet rs = DBMS.search("SELECT * FROM category");
jComboBox1.removeAllItems();
          
          while (rs.next()) {              
              String name = rs.getString("name");
              jComboBox1.addItem(name);
          }
      } catch (Exception e) {
          System.out.println(e);
      }
}
public void loadTable(){
    DecimalFormat df = new DecimalFormat("0.00");
    try {
          ResultSet rs = DBMS.search("SELECT * FROM stock ORDER BY CAST(id AS unsigned) ASC");
          TableModel tm = jTable1.getModel(); 
          DefaultTableModel dtm = (DefaultTableModel) tm;
          dtm.setRowCount(0);
          jLabel24.setText("0.00");
          Double total = 0.00;
          
          while (rs.next()) {              
              Vector<String> v = new Vector<>();
              v.add(rs.getString("id"));
              
              
              ResultSet rs2 = DBMS.search("SELECT `name` FROM category WHERE `id`='"+rs.getString("cate_id")+"'");
              if(rs2.next()){
                  v.add(rs2.getString("name"));
              }
              v.add(rs.getString("name"));
              v.add(rs.getString("weight"));
              v.add(rs.getString("sell_p"));
              v.add(rs.getString("qty_i_b"));
              String qt = rs.getString("qty");
              String q_i_b = rs.getString("qty_i_b");
              Double x1 = Double.valueOf(qt);
              Double y1 = Double.valueOf(q_i_b);
              Double xy = x1/y1;
              int xy1 = xy.intValue();
              v.add(String.valueOf(xy1));
              Double xy2 = Double.valueOf(xy1);
              Double xy3 = xy2*y1;
              Double xy4 = x1-xy3;
              int xy5 = xy4.intValue();
              v.add(String.valueOf(xy5));
              v.add(String.valueOf(qt));
          
          String sp = rs.getString("sell_p");
          Double d_sp = Double.valueOf(sp);
           total += d_sp*x1;
           v.add(df.format(d_sp*x1));
           dtm.addRow(v);
          }
          
          String t = df.format(total);
          jLabel24.setText(String.valueOf(t));
      } catch (Exception e) {
          System.out.println(e);
      }
}
public void loadTableWL(){
    DecimalFormat df = new DecimalFormat("#.00");
    try {
          ResultSet rs = DBMS.search("SELECT * FROM stock ORDER BY CAST(id AS unsigned) ASC");
          TableModel tm = jTable1.getModel(); 
          DefaultTableModel dtm = (DefaultTableModel) tm;
          dtm.setRowCount(0);
          jLabel24.setText("0.00");
          Double total = 0.00;
          while (rs.next()) {              
              Vector<String> v = new Vector<>();
              v.add(rs.getString("id"));
              
              
              ResultSet rs2 = DBMS.search("SELECT `name` FROM category WHERE `id`='"+rs.getString("cate_id")+"'");
              if(rs2.next()){
                  v.add(rs2.getString("name"));
              }
              v.add(rs.getString("name"));
              v.add(rs.getString("weight"));
              v.add(rs.getString("sell_p"));
              v.add(rs.getString("qty_i_b"));
              String qt = rs.getString("qty");
              Double d_qt = Double.valueOf(qt);
              ResultSet rs1 = DBMS.search("SELECT * FROM loading WHERE `stock_id`='"+rs.getString("id")+"'");
              while (rs1.next()) {                  
                  String l_qt = rs1.getString("qty");
                  Double dl_qty = Double.valueOf(l_qt);
                  d_qt+=dl_qty;
              }
              String q_i_b = rs.getString("qty_i_b");
              Double x1 = Double.valueOf(d_qt);
              Double y1 = Double.valueOf(q_i_b);
              Double xy = x1/y1;
              int xy1 = xy.intValue();
              v.add(String.valueOf(xy1));
              Double xy2 = Double.valueOf(xy1);
              Double xy3 = xy2*y1;
              Double xy4 = x1-xy3;
              int xy5 = xy4.intValue();
              v.add(String.valueOf(xy5));
              int i_q = d_qt.intValue();
              v.add(String.valueOf(i_q));
          
          String sp = rs.getString("sell_p");
          Double d_sp = Double.valueOf(sp);
           total += d_sp*d_qt;
           v.add(df.format(d_sp*d_qt));
           dtm.addRow(v);
          }
          
          String t = df.format(total);
          jLabel24.setText(String.valueOf(t));
      } catch (Exception e) {
          System.out.println(e);
      }
}
}
